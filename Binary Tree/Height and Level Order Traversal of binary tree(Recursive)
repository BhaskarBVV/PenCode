#include <bits/stdc++.h>
using namespace std;
struct TreeNode
{
    int val;
    TreeNode *left;
    TreeNode *right;
    TreeNode() : val(0), left(nullptr), right(nullptr) {}
    TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
    TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
};
TreeNode *BuildTree()
{
    int d;
    cin >> d;
    if (d == -1)
        return NULL;
    TreeNode *Node = new TreeNode(d);
    Node->left = BuildTree();
    Node->right = BuildTree();
    return Node;
}
void print(TreeNode *root)
{
    if (root == NULL)
        return;
    cout << root->val;
    print(root->left);

    print(root->right);
}
int height(TreeNode *root)
{
    if (root == NULL)
        return 0;
    int lh = height(root->left);
    int rh = height(root->right);
    return max(lh, rh) + 1;
}
void LevelOrder(TreeNode *root, int k)
{
    if (root == NULL)
        return;
    if (k == 0)
        cout << root->val << " ";
    LevelOrder(root->left, k - 1);
    LevelOrder(root->right, k - 1);
}
int main()
{
    TreeNode *root = BuildTree();
    cout << "PreOrder of Tree is: ";
    print(root);
    cout << endl;
    int h = height(root);
    cout << "Height of tree is : " << h << endl;
    cout << "Level order traversal will be: ";
    for (int i = 0; i < h; i++)
    {
        LevelOrder(root, i);
    }
}



https://eduloop1.blogspot.com/2021/08/height-and-level-order-traversal-of.html
